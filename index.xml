<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>小熊的博客</title>
    <link>https://bearcurb.blog/</link>
    <description>Recent content on 小熊的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 28 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://bearcurb.blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>sql 笔记</title>
      <link>https://bearcurb.blog/posts/2022-10-28/sql-notes/</link>
      <pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://bearcurb.blog/posts/2022-10-28/sql-notes/</guid>
      <description>数据库基础 SQL语句分类 DDL(Data Definition Language):DDL允许用户定义数据，也就是创建表、删除表、修改表结构这些操作。通常，DDL由数据库管理员执行。 DML(Data Manipulation Language):DML为用户提供添加、删除、更新数据的能力，这些是应用程序对数据库的日常操作。 DQL(Data Query Language):DQL允许用户查询数据，这也是通常最频繁的数据库日常操作。 数据查询 基本查询 SELECT * FROM &amp;lt;表名&amp;gt; 条件查询 SELECT * FROM &amp;lt;表名&amp;gt; WHERE &amp;lt;条件表达式&amp;gt; 投影查询 投影查询就是只需要显示部分的列
SELECT 列1, 列2, 列3 ... 排序 SELECT * FROM &amp;lt;表名&amp;gt; ORDER BY &amp;lt;需要排序的值&amp;gt; 如果要反向排序需要 DESC
分页查询 SELECT * FROM &amp;lt;表名&amp;gt; LIMIT &amp;lt;每页显示多少&amp;gt; OFFSET &amp;lt;从哪一页开始&amp;gt; 聚合查询 函数 说明 SUM 计算某一列的合计值，该列必须为数值类型 AVG 计算某一列的平均值，该列必须为数值类型 MAX 计算某一列的最大值 MIN 计算某一列的最小值 分组聚合使用 GROUP BY子句
多表查询 笛卡尔乘积
SELECT * FROM 表1, 表2 连接查询 SELECT * FROM &amp;lt;表名&amp;gt; INNER JOIN &amp;lt;连接的表&amp;gt; ON &amp;lt;连接表达式&amp;gt; INNER JOIN 两张都在的记录 LEFT JOIN 左表存在的记录 RIGHT JOIN 右表存在的记录 FULL OUTER JOIN 两张表都存在的记录 子查询 -- SELECT中的子查询必须是一个只有一个列的结果 SELECT ( SELECT COUNT(*) FROM &amp;lt;表名&amp;gt; ) as &amp;lt;重名&amp;gt; -- FROM中的子查询可以作为一个子表存在也可以内联别的表 SELECT * FROM ( SELECT uid FROM supplier ) as &amp;lt;重名&amp;gt; </description>
    </item>
    
    <item>
      <title>Linux 避坑笔记</title>
      <link>https://bearcurb.blog/posts/2022-10-26/linux-notes/</link>
      <pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://bearcurb.blog/posts/2022-10-26/linux-notes/</guid>
      <description>源 apt官方软件源位于/etc/apt/sources.list下
cat /etc/apt/sources.list | grep -v &amp;quot;#&amp;quot; 查看过滤过注释的源列表
USTC Mirror 网站
sudo sed -i &amp;#39;s/deb.debian.org/mirrors.ustc.edu.cn/g&amp;#39; /etc/apt/sources.list 更改完 sources.list 文件后运行 sudo apt-get update 更新索引以生效。
查看文件内容 cat FILE 输出文件的全部内容
cat FILE1 FILE2 连接两个文件并输出
less FILE 使用less翻页器显示文件内容
less快捷键
按键 效果 d/u 向下/上滚动半页（down/up） f/d 向下/上滚动一整页（forward/back） g / G 跳转到文件开头/结尾 j 向下移动一行 k 向上移动一行 /PATTERN 在文件中搜索 PATTERN n / N 跳转到下一个/上一个找到的 PATTERN q 退出 进程标识符(PID) 进程标识符(PID, Process Identifier)是一个数字,要对进程做任意操作需要使用这个PID nice和PRI nice 操作系统调度线程的优先程度 priority 操作系统内部使用的调度标志 $ nice -10 vim #use 10 nice run vim $ renice -n 10 -p 12345 # 设置pid12345的线程nice为-10 进程状态 Status: R: running #正在跑 S: sleeping #可以被中断的睡眠 T: traced/stopped #被跟踪/挂起的进程 Z: zombie #僵尸进程 D: disk sleep #不能被中断的睡眠 前后台切换 Ctrl+z 把程序挂在后台暂停执行</description>
    </item>
    
    <item>
      <title>JavaScript 笔记</title>
      <link>https://bearcurb.blog/posts/2023-7-30/javascript-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bearcurb.blog/posts/2023-7-30/javascript-notes/</guid>
      <description>写在前面 本笔记是(MDN Web Docs的JavaScript教程)笔记
语法和数据类型 JavaScript 是区分大小写的,并使用 Unicode 字符集
früh 和 Früh 则是两个不同的变量
在 JavaScript 中,指令被称为语句(Statement),并用分号(;)进行分隔(不写也可以)。
变量和作用域 var 声明一个变量。 let 声明一个块作用域的局部变量。 const 声明一个块作用域的只读常量。 用 var 或 let 语句声明的变量,如果没有赋初始值,则其值为 undefined。
作用域 全局变量 可被当前文件中任何地方的代码访问 局部变量 只能在当前函数内访问 变量提升 先使用变量稍后声明变量被成为变量提升,但是提升后的变量会返回undefined
var声明的变量可以被正常用 console.log(x === undefined); // true var x = 3; let和const声明的变量会抛(ReferenceError) console.log(x); // ReferenceError let x = 3; 函数提升 函数声明会被提升,函数表达式不会被提升
foo(); // &amp;#34;bar&amp;#34; function foo() { console.log(&amp;#34;bar&amp;#34;); } baz(); // 类型错误：baz 不是一个函数 var baz = function() { console.</description>
    </item>
    
  </channel>
</rss>
